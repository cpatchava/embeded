#include "codes.h"

// This procedure sends a 38KHz pulse to the IRledPin 
 // for a certain # of microseconds. We'll use this whenever we need to send codes
void pulseIR(long microsecs) {
   // we'll count down from the number of microseconds we are told to wait
	cli();  // this turns off any background interrupts
	while (microsecs > 0) {
  // 38 kHz is about 13 microseconds high and 13 microseconds low
		digitalWrite(IR_LED, HIGH);  // this takes about 3 microseconds to happen
    delayMicroseconds(10);         // hang out for 10 microseconds
    digitalWrite(IR_LED, LOW);   // this also takes about 3 microseconds
    delayMicroseconds(10);         // hang out for 10 microseconds
                         
    // so 26 microseconds altogether
    microsecs -= 26;
	}
                                  
  sei();  // this turns them back on
}

void tv_remote_on_off(){
	delayMicroseconds(7976 );
	pulseIR( 4400);
	delayMicroseconds(4400 );
	pulseIR( 600);
	delayMicroseconds(1640 );
	pulseIR( 600);
	delayMicroseconds(1600 );
	pulseIR( 620);
	delayMicroseconds(1600 );
	pulseIR( 620);
	delayMicroseconds(600 );
	pulseIR( 580);
	delayMicroseconds(620 );
	pulseIR( 560);
	delayMicroseconds(620 );
	pulseIR( 580);
	delayMicroseconds(600 );
	pulseIR( 580);
	delayMicroseconds(600 );
	pulseIR( 580);
	delayMicroseconds(1660 );
	pulseIR( 580);
	delayMicroseconds(1640 );
	pulseIR( 580);
	delayMicroseconds(1620 );
	pulseIR( 600);
	delayMicroseconds(580 );
	pulseIR( 620);
	delayMicroseconds(600 );
	pulseIR( 580);
	delayMicroseconds(600 );
	pulseIR( 580);
	delayMicroseconds(620 );
	pulseIR( 560);
	delayMicroseconds(620 );
	pulseIR( 580);
	delayMicroseconds(600 );
	pulseIR( 580);
	delayMicroseconds(1640 );
	pulseIR( 580);
	delayMicroseconds(620 );
	pulseIR( 580);
	delayMicroseconds(600 );
	pulseIR( 580);
	delayMicroseconds(600 );
	pulseIR( 600);
	delayMicroseconds(600 );
	pulseIR( 580);
	delayMicroseconds(600 );
	pulseIR( 580);
	delayMicroseconds(600 );
	pulseIR( 580);
	delayMicroseconds(1660 );
	pulseIR( 580);
	delayMicroseconds(600 );
	pulseIR( 580);
	delayMicroseconds(1640 );
	pulseIR( 580);
	delayMicroseconds(1620 );
	pulseIR( 600);
	delayMicroseconds(1620 );
	pulseIR( 620);
	delayMicroseconds(1600 );
	pulseIR( 620);
	delayMicroseconds(1600 );
	pulseIR( 660);
	delayMicroseconds(1580 );
	pulseIR( 640);
	delayMicroseconds(43760 );
	pulseIR( 4420);
	delayMicroseconds(4340 );
	pulseIR( 600);
	delayMicroseconds(600 );
	pulseIR( 580);
	delayMicroseconds(29884 );
	pulseIR( 4400);
	delayMicroseconds(4360 );
	pulseIR( 600);
	delayMicroseconds(600 );
	pulseIR( 600);
}

void tv_remote_volume_up(){
	delayMicroseconds(22512 );
	pulseIR( 4380);
	delayMicroseconds(4400 );
	pulseIR( 620);
	delayMicroseconds(1600 );
	pulseIR( 620);
	delayMicroseconds(1600 );
	pulseIR( 620);
	delayMicroseconds(1620 );
	pulseIR( 600);
	delayMicroseconds(600 );
	pulseIR( 580);
	delayMicroseconds(620 );
	pulseIR( 580);
	delayMicroseconds(600 );
	pulseIR( 580);
	delayMicroseconds(600 );
	pulseIR( 600);
	delayMicroseconds(600 );
	pulseIR( 580);
	delayMicroseconds(1620 );
	pulseIR( 600);
	delayMicroseconds(1620 );
	pulseIR( 600);
	delayMicroseconds(1620 );
	pulseIR( 600);
	delayMicroseconds(620 );
	pulseIR( 580);
	delayMicroseconds(600 );
	pulseIR( 580);
	delayMicroseconds(600 );
	pulseIR( 580);
	delayMicroseconds(620 );
	pulseIR( 580);
	delayMicroseconds(600 );
	pulseIR( 580);
	delayMicroseconds(1620 );
	pulseIR( 620);
	delayMicroseconds(1600 );
	pulseIR( 620);
	delayMicroseconds(1600 );
	pulseIR( 620);
	delayMicroseconds(600 );
	pulseIR( 580);
	delayMicroseconds(600 );
	pulseIR( 600);
	delayMicroseconds(600 );
	pulseIR( 580);
	delayMicroseconds(600 );
	pulseIR( 580);
	delayMicroseconds(600 );
	pulseIR( 580);
	delayMicroseconds(620 );
	pulseIR( 580);
	delayMicroseconds(600 );
	pulseIR( 580);
	delayMicroseconds(600 );
	pulseIR( 580);
	delayMicroseconds(1620 );
	pulseIR( 600);
	delayMicroseconds(1640 );
	pulseIR( 600);
	delayMicroseconds(1620 );
	pulseIR( 600);
	delayMicroseconds(1620 );
	pulseIR( 600);
	delayMicroseconds(1620 );
	pulseIR( 620);
	delayMicroseconds(43780 );
	pulseIR( 4400);
	delayMicroseconds(4360 );
	pulseIR( 620);
	delayMicroseconds(600 );
	pulseIR( 580);
	delayMicroseconds(29864 );
	pulseIR( 4400);
	delayMicroseconds(4360 );
	pulseIR( 620);
	delayMicroseconds(600 );
	pulseIR( 580);
}

void tv_remote_volume_down(){
	delayMicroseconds(19628 );
	pulseIR( 4400);
	delayMicroseconds(4400 );
	pulseIR( 600);
	delayMicroseconds(1600 );
	pulseIR( 620);
	delayMicroseconds(1620 );
	pulseIR( 600);
	delayMicroseconds(1620 );
	pulseIR( 600);
	delayMicroseconds(620 );
	pulseIR( 580);
	delayMicroseconds(600 );
	pulseIR( 580);
	delayMicroseconds(600 );
	pulseIR( 580);
	delayMicroseconds(620 );
	pulseIR( 580);
	delayMicroseconds(600 );
	pulseIR( 580);
	delayMicroseconds(1620 );
	pulseIR( 600);
	delayMicroseconds(1620 );
	pulseIR( 620);
	delayMicroseconds(1600 );
	pulseIR( 620);
	delayMicroseconds(600 );
	pulseIR( 580);
	delayMicroseconds(600 );
	pulseIR( 580);
	delayMicroseconds(620 );
	pulseIR( 580);
	delayMicroseconds(600 );
	pulseIR( 580);
	delayMicroseconds(600 );
	pulseIR( 580);
	delayMicroseconds(1620 );
	pulseIR( 600);
	delayMicroseconds(1620 );
	pulseIR( 620);
	delayMicroseconds(600 );
	pulseIR( 580);
	delayMicroseconds(1620 );
	pulseIR( 620);
	delayMicroseconds(600 );
	pulseIR( 580);
	delayMicroseconds(600 );
	pulseIR( 580);
	delayMicroseconds(600 );
	pulseIR( 600);
	delayMicroseconds(600 );
	pulseIR( 580);
	delayMicroseconds(600 );
	pulseIR( 580);
	delayMicroseconds(600 );
	pulseIR( 600);
	delayMicroseconds(1600 );
	pulseIR( 600);
	delayMicroseconds(620 );
	pulseIR( 580);
	delayMicroseconds(1620 );
	pulseIR( 600);
	delayMicroseconds(1620 );
	pulseIR( 620);
	delayMicroseconds(1600 );
	pulseIR( 620);
	delayMicroseconds(1600 );
	pulseIR( 620);
	delayMicroseconds(43780 );
	pulseIR( 4400);
	delayMicroseconds(4360 );
	pulseIR( 620);
	delayMicroseconds(600 );
	pulseIR( 580);
	delayMicroseconds(29864 );
	pulseIR( 4400);
	delayMicroseconds(4360 );
	pulseIR( 620);
	delayMicroseconds(600 );
	pulseIR( 580);

}

void tv_remote_mute(){
	delayMicroseconds(11788 );
	pulseIR( 4400);
	delayMicroseconds(4380 );
	pulseIR( 620);
	delayMicroseconds(1640 );
	pulseIR( 580);
	delayMicroseconds(1620 );
	pulseIR( 600);
	delayMicroseconds(1620 );
	pulseIR( 620);
	delayMicroseconds(600 );
	pulseIR( 580);
	delayMicroseconds(600 );
	pulseIR( 600);
	delayMicroseconds(580 );
	pulseIR( 600);
	delayMicroseconds(580 );
	pulseIR( 600);
	delayMicroseconds(600 );
	pulseIR( 580);
	delayMicroseconds(1660 );
	pulseIR( 580);
	delayMicroseconds(1620 );
	pulseIR( 600);
	delayMicroseconds(1640 );
	pulseIR( 580);
	delayMicroseconds(580 );
	pulseIR( 600);
	delayMicroseconds(620 );
	pulseIR( 560);
	delayMicroseconds(620 );
	pulseIR( 580);
	delayMicroseconds(580 );
	pulseIR( 600);
	delayMicroseconds(600 );
	pulseIR( 600);
	delayMicroseconds(1640 );
	pulseIR( 580);
	delayMicroseconds(1640 );
	pulseIR( 580);
	delayMicroseconds(1620 );
	pulseIR( 600);
	delayMicroseconds(1640 );
	pulseIR( 600);
	delayMicroseconds(560 );
	pulseIR( 620);
	delayMicroseconds(600 );
	pulseIR( 580);
	delayMicroseconds(580 );
	pulseIR( 600);
	delayMicroseconds(580 );
	pulseIR( 620);
	delayMicroseconds(600 );
	pulseIR( 580);
	delayMicroseconds(600 );
	pulseIR( 580);
	delayMicroseconds(620 );
	pulseIR( 580);
	delayMicroseconds(600 );
	pulseIR( 580);
	delayMicroseconds(1640 );
	pulseIR( 600);
	delayMicroseconds(1620 );
	pulseIR( 580);
	delayMicroseconds(1660 );
	pulseIR( 560);
	delayMicroseconds(1640 );
	pulseIR( 600);
	delayMicroseconds(43780 );
	pulseIR( 4420);
	delayMicroseconds(4360 );
	pulseIR( 600);
	delayMicroseconds(600 );
	pulseIR( 580);

}

void fan_on_off(){
	delayMicroseconds(38664 );
	pulseIR( 8880);
	delayMicroseconds(4340 );
	pulseIR( 580);
	delayMicroseconds(1620 );
	pulseIR( 580);
	delayMicroseconds(520 );
	pulseIR( 580);
	delayMicroseconds(560 );
	pulseIR( 520);
	delayMicroseconds(560 );
	pulseIR( 560);
	delayMicroseconds(540 );
	pulseIR( 560);
	delayMicroseconds(540 );
	pulseIR( 540);
	delayMicroseconds(540 );
	pulseIR( 560);
	delayMicroseconds(540 );
	pulseIR( 560);
	delayMicroseconds(560 );
	pulseIR( 520);
	delayMicroseconds(1640 );
	pulseIR( 580);
	delayMicroseconds(1600 );
	pulseIR( 600);
	delayMicroseconds(1620 );
	pulseIR( 560);
	delayMicroseconds(1640 );
	pulseIR( 580);
	delayMicroseconds(1600 );
	pulseIR( 580);
	delayMicroseconds(1640 );
	pulseIR( 560);
	delayMicroseconds(1640 );
	pulseIR( 580);
	delayMicroseconds(1600 );
	pulseIR( 600);
	delayMicroseconds(1620 );
	pulseIR( 560);
	delayMicroseconds(540 );
	pulseIR( 560);
	delayMicroseconds(560 );
	pulseIR( 580);
	delayMicroseconds(520 );
	pulseIR( 520);
	delayMicroseconds(560 );
	pulseIR( 560);
	delayMicroseconds(540 );
	pulseIR( 580);
	delayMicroseconds(1620 );
	pulseIR( 560);
	delayMicroseconds(540 );
	pulseIR( 580);
	delayMicroseconds(520 );
	pulseIR( 540);
	delayMicroseconds(1620 );
	pulseIR( 620);
	delayMicroseconds(1580 );
	pulseIR( 580);
	delayMicroseconds(1640 );
	pulseIR( 560);
	delayMicroseconds(1620 );
	pulseIR( 620);
	delayMicroseconds(1580 );
	pulseIR( 580);
	delayMicroseconds(520 );
	pulseIR( 600);
	delayMicroseconds(39100 );
	pulseIR( 8840);
	delayMicroseconds(2200 );
	pulseIR( 560);
	delayMicroseconds(28744 );
	pulseIR( 8880);
	delayMicroseconds(2160 );
	pulseIR( 540);
}
void fan_speed(){
	delayMicroseconds(15512 );
	pulseIR( 8840);
	delayMicroseconds(4400 );
	pulseIR( 540);
	delayMicroseconds(1640 );
	pulseIR( 580);
	delayMicroseconds(540 );
	pulseIR( 540);
	delayMicroseconds(560 );
	pulseIR( 560);
	delayMicroseconds(520 );
	pulseIR( 600);
	delayMicroseconds(500 );
	pulseIR( 560);
	delayMicroseconds(540 );
	pulseIR( 560);
	delayMicroseconds(520 );
	pulseIR( 600);
	delayMicroseconds(520 );
	pulseIR( 540);
	delayMicroseconds(560 );
	pulseIR( 540);
	delayMicroseconds(1640 );
	pulseIR( 560);
	delayMicroseconds(1640 );
	pulseIR( 600);
	delayMicroseconds(1580 );
	pulseIR( 600);
	delayMicroseconds(1620 );
	pulseIR( 560);
	delayMicroseconds(1640 );
	pulseIR( 600);
	delayMicroseconds(1580 );
	pulseIR( 580);
	delayMicroseconds(1640 );
	pulseIR( 560);
	delayMicroseconds(1640 );
	pulseIR( 600);
	delayMicroseconds(1580 );
	pulseIR( 580);
	delayMicroseconds(1640 );
	pulseIR( 560);
	delayMicroseconds(540 );
	pulseIR( 560);
	delayMicroseconds(560 );
	pulseIR( 580);
	delayMicroseconds(500 );
	pulseIR( 540);
	delayMicroseconds(560 );
	pulseIR( 560);
	delayMicroseconds(1620 );
	pulseIR( 560);
	delayMicroseconds(560 );
	pulseIR( 540);
	delayMicroseconds(560 );
	pulseIR( 580);
	delayMicroseconds(520 );
	pulseIR( 520);
	delayMicroseconds(1640 );
	pulseIR( 620);
	delayMicroseconds(1580 );
	pulseIR( 580);
	delayMicroseconds(1640 );
	pulseIR( 540);
	delayMicroseconds(1640 );
	pulseIR( 620);
	delayMicroseconds(480 );
	pulseIR( 560);
	delayMicroseconds(39140 );
	pulseIR( 8860);
	delayMicroseconds(2160 );
	pulseIR( 580);
}

void fan_timer(){
	delayMicroseconds(44436 );
	pulseIR( 8860);
	delayMicroseconds(4380 );
	pulseIR( 580);
	delayMicroseconds(1620 );
	pulseIR( 560);
	delayMicroseconds(540 );
	pulseIR( 580);
	delayMicroseconds(500 );
	pulseIR( 580);
	delayMicroseconds(540 );
	pulseIR( 560);
	delayMicroseconds(540 );
	pulseIR( 560);
	delayMicroseconds(540 );
	pulseIR( 560);
	delayMicroseconds(520 );
	pulseIR( 560);
	delayMicroseconds(560 );
	pulseIR( 540);
	delayMicroseconds(560 );
	pulseIR( 560);
	delayMicroseconds(1620 );
	pulseIR( 560);
	delayMicroseconds(1640 );
	pulseIR( 560);
	delayMicroseconds(1620 );
	pulseIR( 580);
	delayMicroseconds(1640 );
	pulseIR( 560);
	delayMicroseconds(1640 );
	pulseIR( 540);
	delayMicroseconds(1640 );
	pulseIR( 580);
	delayMicroseconds(1640 );
	pulseIR( 560);
	delayMicroseconds(1640 );
	pulseIR( 540);
	delayMicroseconds(1640 );
	pulseIR( 600);
	delayMicroseconds(520 );
	pulseIR( 540);
	delayMicroseconds(1640 );
	pulseIR( 600);
	delayMicroseconds(500 );
	pulseIR( 560);
	delayMicroseconds(540 );
	pulseIR( 560);
	delayMicroseconds(520 );
	pulseIR( 620);
	delayMicroseconds(1600 );
	pulseIR( 560);
	delayMicroseconds(560 );
	pulseIR( 560);
	delayMicroseconds(520 );
	pulseIR( 580);
	delayMicroseconds(1620 );
	pulseIR( 580);
	delayMicroseconds(520 );
	pulseIR( 580);
	delayMicroseconds(1600 );
	pulseIR( 600);
	delayMicroseconds(1620 );
	pulseIR( 580);
	delayMicroseconds(1600 );
	pulseIR( 580);
	delayMicroseconds(540 );
	pulseIR( 560);
	delayMicroseconds(39100 );
	pulseIR( 8880);
	delayMicroseconds(2160 );
	pulseIR( 600);
}

void button_execute(ir_code &code){
 int x = 0;
 //we are going to be doing it based on the size of the arrays
 //so that we do no thav
	while(x < code.size){
		delayMicroseconds(code.delay[x]);
		pulseIR(code.delay[x+1]);
		x+=2;
	}

}
/*
int initialize(){
string line;
	ifstream myfile ("example.txt");
	if (myfile.is_open()){
		while ( getline (myfile,line) ){
		}
	myfile.close();
	}

}
*/
